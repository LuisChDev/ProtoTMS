* ProtoTMS - optimización de rutas vehiculares
  Con esta aplicación, es posible obtener un trazado óptimo de rutas
para flotas de camiones.

  Using this app, you can compute an optimal set of routes for vehicle
fleets. This can be useful for logistics (deliveries, for instance).

** instalación / install
*** Usando nix / with nix
Instala nix primero (más información en [[nixos.org]]). Descarga el canal
nixos-20.03, luego, ~cd~ al directorio donde clonaste el proyecto, y ~nix-shell~
te deja en un entorno con todas las bibliotecas requeridas. Finalmente,
~nixReqs.txt~ contiene las dependencias externas a nix, para instalar en el
entorno virtual.

First, install nix (more info in [[nixos.org]]). Download the nixos-20.03 channel.
Then ~cd~ into the directory where the project lives, and ~nix-shell~ will drop
you into an env with all requirements satisfied. Finally, ~nixReqs.txt~ contains
the dependencies missing from nix.

#+BEGIN_SRC bash
curl -L --proto '=https' --tlsv1.2 https://nixos.org/nix/install | sh
nix-channel --add https://nixos.org/channels/nixos-20.03
nix-channel --update
git clone https://github.com/LuisChDev/ProtoTMS
cd ProtoTMS
nix-shell
python -m pip install -r nixReqs.txt
#+END_SRC

*** Usando pip / using pip
crea un entorno virtual e instala los requerimientos: / create a virtual env and
then install the requirements:

#+BEGIN_SRC bash
git clone https://github.com/LuisChDev/ProtoTMS
cd ProtoTMS
python3 -m venv .venv
. .venv/bin/activate
python3 -m pip install -m requirements.txt
#+END_SRC

** Clave de API / API key
Este proyecto hace uso de la API de Google Maps para ciertos cálculos. Para ello
es necesario usar una clave de API. En
[[https://developers.google.com/maps/documentation/distance-matrix/start#get-a-key]]
hay más información. Luego de obtenerla, crea un archivo llamado ~secrets.yaml~
en el directorio raíz del proyecto, y dentro de él, una entrada llamada
~API_key~ con la clave, así:

#+BEGIN_SRC yaml
API_key: "tuclavevaaqui"

#+END_SRC


This project makes use of Google Maps' API for certain calculations. For this,
you need an API key. In
[[https://developers.google.com/maps/documentation/distance-matrix/start#get-a-key]]
you'll find more info. After getting one, create a file called ~secrets.yaml~ in
the root directory of the project, and inside of it, an entry called ~API_key~
with your key, like this:

#+BEGIN_SRC yaml
API_key: "yourapikeygoeshere"
  
#+END_SRC
** por hacer / things to do
   - escribir pruebas para la mayoría de funciones

   - write tests for most functions
